# Copyright (c) 2010 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')

# To enable getting the generated include files and sources.
env.Append(CPPPATH=
          ['${SOURCE_ROOT}/native_client/src/shared/ppapi_proxy/untrusted'])

env.Append(CPPDEFINES=['XP_UNIX'])
env.FilterOut(CCFLAGS=['-Wswitch-enum'])
env.Append(CCFLAGS=['-Wno-long-long'])

# The PPAPI RPCs are specified abstractly via .srpc files.
# Once a .srpc file is added to the UntrustedSrpc rules below, the low-level
# server/client proxies and stubs can be generated automatically using
#   scons --mode=nacl_extra_sdk srpcgen
# The .cc files are written to ./ and .h files - to ./untrusted/srpcgen/.
# The generated files must be committed when changes are made to .srpc files.

env.UntrustedSrpc(is_client=False,
                  srpc_files=['objectstub.srpc',
                              'completion_callback.srpc',
                              'ppp.srpc',
                              'ppp_instance.srpc',
                             ],
                  name='PppRpcs',
                  h_file='ppp_rpc.h',
                  cc_file='ppp_rpc_server.cc',
                  guard='GEN_PPAPI_PROXY_PPP_RPC_H_')

env.UntrustedSrpc(is_client=True,
                  srpc_files=['objectstub.srpc',
                              'ppb_core.srpc',
                              'ppb_graphics_2d.srpc',
                              'ppb_image_data.srpc',
                             ],
                  name='PpbRpcs',
                  h_file='ppb_rpc.h',
                  cc_file='ppb_rpc_client.cc',
                  guard='GEN_PPAPI_PROXY_PPB_RPC_H_')

env.UntrustedSrpc(is_client=True,
                  srpc_files=['upcall.srpc'],
                  name='PpbUpcalls',
                  h_file='upcall.h',
                  cc_file='upcall_client.cc',
                  guard='GEN_PPAPI_PROXY_UPCALL_H_')

env.ComponentLibrary('ppruntime',
                     ['completion_callback_table.cc',
                      'object.cc',
                      'object_proxy.cc',
                      'object_serialize.cc',
                      'objectstub_rpc_impl.cc',
                      'plugin_audio.cc',
                      'plugin_audio_config.cc',
                      'plugin_buffer.cc',
                      'plugin_core.cc',
                      'plugin_file_io.cc',
                      'plugin_file_ref.cc',
                      'plugin_getinterface.cc',
                      'plugin_globals.cc',
                      'plugin_graphics_2d.cc',
                      'plugin_graphics_3d.cc',
                      'plugin_image_data.cc',
                      'plugin_instance.cc',
                      'plugin_main.cc',
                      'plugin_ppp_instance_impl.cc',
                      'plugin_resource.cc',
                      'plugin_resource_tracker.cc',
                      'plugin_url_loader.cc',
                      'plugin_url_request_info.cc',
                      'plugin_url_response_info.cc',
                      'plugin_var.cc',
                      'plugin_ppp_impl.cc',
                      'utility.cc',
                      # Autogenerated files
                      'ppp_rpc_server.cc',
                      'ppb_rpc_client.cc',
                      'upcall_client.cc'
                      ])

env.Depends('ppruntime', 'srpc_untrusted')
env.AddLibraryToSdk(['ppruntime'])
