# Copyright (c) 2010 The Native Client Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# The source files (.cc and .h) listed in this file are maintained by the
# script ./update-scons.py.  Update $SOURCE_ROOT/ppapi and run the script
# ./update-scons.py to update all of the source files listed here.

# update-scons.py reads the .scons files in this directory.  It replaces all
# of the lines between the starting marker and the ending marker with the
# corresponding list of files from the ppapi.gyp file.
#
# The starting marker format is:
#   # From ppapi.gyp:TARGET:REGEXP
# The ending marker format is:
#   # End ppapi.gyp
#
# For example, if this exists in the .scons file:
#   # From ppapi.gyp:ppapi_c:.*\.h
#   ...
#   # End ppapi.gyp
#
# then this script will remove all of the lines between the starting marker and
# the ending marker.  It will then find the 'ppapi_c' target in the ppapi.gyp
# file.  It will find all 'sources' for that target that match the regular
# expression '.*\.h' and will insert each of those source files in between the
# two markers.

Import('env')

# Underlay $SOURCE_ROOT/ppapi in this directory.
Dir('.').addRepository(Dir('#/../ppapi'))

# Don't treat warnings as errors on Windows
if env.Bit('windows'):
  env.FilterOut(CCFLAGS=['/WX'])

cpp_sources = [
    # Updated automatically by update-scons.py.
    # From ppapi.gyp:ppapi_cpp_objects:.*\.cc
    'cpp/core.cc',
    'cpp/graphics_2d.cc',
    'cpp/image_data.cc',
    'cpp/instance.cc',
    'cpp/module.cc',
    'cpp/paint_aggregator.cc',
    'cpp/paint_manager.cc',
    'cpp/rect.cc',
    'cpp/resource.cc',
    'cpp/url_loader.cc',
    'cpp/url_request_info.cc',
    'cpp/url_response_info.cc',
    'cpp/var.cc',
    'cpp/dev/audio_config_dev.cc',
    'cpp/dev/audio_dev.cc',
    'cpp/dev/buffer_dev.cc',
    'cpp/dev/directory_entry_dev.cc',
    'cpp/dev/directory_reader_dev.cc',
    'cpp/dev/file_chooser_dev.cc',
    'cpp/dev/file_io_dev.cc',
    'cpp/dev/file_ref_dev.cc',
    'cpp/dev/file_system_dev.cc',
    'cpp/dev/find_dev.cc',
    'cpp/dev/font_dev.cc',
    'cpp/dev/fullscreen_dev.cc',
    'cpp/dev/graphics_3d_client_dev.cc',
    'cpp/dev/graphics_3d_dev.cc',
    'cpp/dev/printing_dev.cc',
    'cpp/dev/scrollbar_dev.cc',
    'cpp/dev/selection_dev.cc',
    'cpp/dev/transport_dev.cc',
    'cpp/dev/url_util_dev.cc',
    'cpp/dev/video_decoder_dev.cc',
    'cpp/dev/widget_client_dev.cc',
    'cpp/dev/widget_dev.cc',
    'cpp/dev/zoom_dev.cc',
    'cpp/dev/scriptable_object_deprecated.cc',
    # End ppapi.gyp
    # Updated automatically by update-scons.py.
    # From ppapi.gyp:ppapi_cpp:.*\.cc
    'cpp/ppp_entrypoints.cc',
    # End ppapi.gyp
    ]

env.DualLibrary('ppapi_cpp', cpp_sources)
