# Copyright 2010, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Import('env')

#--- Version that tests errno conditions

env.StaticObject('float_math', 'float_math.c')
env.ComponentProgram('float_math.nexe',
                     'float_math',
                     EXTRA_LIBS=['m'])
node = env.CommandSelLdrTestNacl(
  'float_math.out',
  command=[env.File('float_math.nexe')],
  exit_status='55',
  )
env.AddNodeToTestSuite(node,
                       ['small_tests'],
                       'run_float_math_test')

#--- Version that uses -fno-math-errno and doesn't test errno conditions

# TODO(jvoung) enable this once we fix linking to handle libm dependencies
# introduced by lowering (llvm intrinsics -> libm functions).
# c.f. http://code.google.com/p/nativeclient/issues/detail?id=821
if env.Bit('bitcode'):
   Return()

noerrno_env = env.Clone()
noerrno_env.Append(CCFLAGS=['-fno-math-errno'])
noerrno_env.Append(CPPDEFINES=['NO_ERRNO_CHECK'])
noerrno_env.StaticObject('float_math_noerrno', 'float_math.c')
noerrno_env.ComponentProgram('float_math_noerrno.nexe',
                             'float_math_noerrno',
                             EXTRA_LIBS=['m'])
node = noerrno_env.CommandSelLdrTestNacl(
  'float_math_noerrno.out',
  command=[noerrno_env.File('float_math_noerrno.nexe')],
  exit_status='55',
  )
noerrno_env.AddNodeToTestSuite(node,
                               ['small_tests'],
                              'run_float_math_noerrno_test')
