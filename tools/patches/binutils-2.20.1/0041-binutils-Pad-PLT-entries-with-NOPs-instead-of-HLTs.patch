From 4221ca5fe9300118e587f184c57067b0415b4e43 Mon Sep 17 00:00:00 2001
From: Mark Seaborn <mseaborn@chromium.org>
Date: Tue, 17 Aug 2010 10:59:03 +0100
Subject: [PATCH] [binutils] Pad PLT entries with NOPs instead of HLTs

nacl_dyncode_copy() now rejects instruction bundles that contain only
HLTs, so we need to change at least the 0th PLT entries.

Also fix the i386 PIC PLT entry so that it pads to the full 64 bytes.
Before, the last 4 bytes were zeroes.

BUG=http://code.google.com/p/nativeclient/issues/detail?id=820
TEST=Tested 32-bit with nacl-glibc's nacl/test.py

Review URL: http://codereview.chromium.org/3177017
---
 binutils/bfd/elf32-i386.c   |   49 ++++++++++++++++++++++---------------------
 binutils/bfd/elf64-x86-64.c |   42 ++++++++++++++++++------------------
 2 files changed, 46 insertions(+), 45 deletions(-)

diff --git a/binutils/bfd/elf32-i386.c b/binutils/bfd/elf32-i386.c
index 8e1f577..d4bba67 100644
--- a/binutils/bfd/elf32-i386.c
+++ b/binutils/bfd/elf32-i386.c
@@ -574,11 +574,11 @@ static const bfd_byte elf_i386_plt_entry[PLT_ENTRY_SIZE] =
   0x8b, 0x09,		    /* mov (%ecx), %ecx */
   0x83, 0xe1, 0xe0,	    /* andl %ecx, NACLMASK */
   0xff, 0xe1,		    /* jmp *%ecx */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
 #define elf_i386_plt_entry_offset2 32
   0x68,			    /* pushl immediate */
 #define elf_i386_plt_entry_offset3 33
@@ -587,12 +587,12 @@ static const bfd_byte elf_i386_plt_entry[PLT_ENTRY_SIZE] =
 #define elf_i386_plt_entry_offset4 38
   0, 0, 0, 0,		    /* replaced with offset to start of .plt.  */
 #define elf_i386_plt_entry_offset5 42
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4		    /* fill with hlt instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90		    /* fill with nop instructions. */
 };
 #else
 static const bfd_byte elf_i386_plt_entry[PLT_ENTRY_SIZE] =
@@ -621,7 +621,7 @@ static const bfd_byte elf_i386_pic_plt0_entry[12] =
   0x8b, 0x4b, 0x08,		/* mov 0x8(%ebx), %ecx */
   0x83, 0xe1, 0xe0,		/* and $NACLMASK, %ecx */
   0xff, 0xe1,			/* jmp *%ecx */
-  0xf4				/* fill with hlt instructions. */
+  0x90				/* fill with nop instructions. */
 #else
   0xff, 0xb3, 4, 0, 0, 0,	/* pushl 4(%ebx) */
   0xff, 0xa3, 8, 0, 0, 0	/* jmp *8(%ebx) */
@@ -637,21 +637,22 @@ static const bfd_byte elf_i386_pic_plt_entry[PLT_ENTRY_SIZE] =
   0, 0, 0, 0,		    /* replaced with offset of this symbol in .got.*/
   0x83, 0xe1, 0xe0,	    /* andl %ecx, NACLMASK */
   0xff, 0xe1,		    /* jmp *%ecx */
-  0xf4,                     /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90,                     /* fill with nop instructions. */
   0x68,			    /* pushl immediate */
   0, 0, 0, 0,		    /* replaced with offset into relocation table.  */
   0xe9,			    /* jmp relative */
   0, 0, 0, 0,		    /* replaced with offset to start of .plt.  */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4                /* fill with hlt instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90                /* fill with nop instructions. */
 };
 #else
 static const bfd_byte elf_i386_pic_plt_entry[PLT_ENTRY_SIZE] =
@@ -917,7 +918,7 @@ elf_i386_link_hash_table_create (bfd *abfd)
   ret->is_vxworks = 0;
   ret->srelplt2 = NULL;
 #ifdef ELF32_NACL_C
-  ret->plt0_pad_byte = 0xf4;
+  ret->plt0_pad_byte = 0x90;
 #else
   ret->plt0_pad_byte = 0;
 #endif
diff --git a/binutils/bfd/elf64-x86-64.c b/binutils/bfd/elf64-x86-64.c
index 063fa37..1434836 100644
--- a/binutils/bfd/elf64-x86-64.c
+++ b/binutils/bfd/elf64-x86-64.c
@@ -397,17 +397,17 @@ static const bfd_byte elf64_x86_64_plt0_entry[PLT_ENTRY_SIZE] =
   0x4d, 0x8b, 0x1b,		/* mov (%r11), %r11 */
   0x49, 0x83, 0xe3, 0xe0,	/* andq NACLMASK, %r11 */
   0x41, 0xff, 0xe3,		/* jmp *%r11 */
-  0xf4, 0xf4, 0xf4, 0xf4,	/* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,	/* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,	/* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,	/* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,	/* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,	/* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,	/* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,	/* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,	/* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,	/* fill with hlt instructions. */
-  0xf4				/* fill with hlt instructions. */
+  0x90, 0x90, 0x90, 0x90,	/* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,	/* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,	/* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,	/* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,	/* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,	/* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,	/* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,	/* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,	/* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,	/* fill with nop instructions. */
+  0x90				/* fill with nop instructions. */
 };
 #else
 static const bfd_byte elf64_x86_64_plt0_entry[PLT_ENTRY_SIZE] =
@@ -434,10 +434,10 @@ static const bfd_byte elf64_x86_64_plt_entry[PLT_ENTRY_SIZE] =
   0x4d, 0x8b, 0x1b,	    /* mov (%r11), %r11 */
   0x49, 0x83, 0xe3, 0xe0,   /* andq NACLMASK, %r11 */
   0x41, 0xff, 0xe3,	    /* jmp *%r11 */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4,	    /* fill with hlt instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90,	    /* fill with nop instructions. */
 #define elf_x86_64_plt_entry_offset2 32
   0x68,			    /* pushq immediate */
 #define elf_x86_64_plt_entry_offset3 33
@@ -446,12 +446,12 @@ static const bfd_byte elf64_x86_64_plt_entry[PLT_ENTRY_SIZE] =
 #define elf_x86_64_plt_entry_offset4 38
   0, 0, 0, 0,		    /* replaced with offset to start of .plt0.  */
 #define elf_x86_64_plt_entry_offset5 42
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4, 0xf4, 0xf4,   /* fill with hlt instructions. */
-  0xf4, 0xf4		    /* fill with hlt instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90, 0x90, 0x90,   /* fill with nop instructions. */
+  0x90, 0x90		    /* fill with nop instructions. */
 };
 #else
 static const bfd_byte elf64_x86_64_plt_entry[PLT_ENTRY_SIZE] =
-- 
1.6.0.4

