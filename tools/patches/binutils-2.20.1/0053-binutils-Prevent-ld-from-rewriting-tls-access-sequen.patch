From da8312d016b48f8765b5d5809e122b6ba04ea9d6 Mon Sep 17 00:00:00 2001
From: Evgeny Eltsin <eaeltsin@google.com>
Date: Wed, 22 Sep 2010 18:14:07 +0400
Subject: [PATCH 53/53] [binutils] Prevent ld from rewriting tls access sequences with calls

NaCl assembler inserts nops in front of a call for proper bundling. When linker tries to rewrite a code sequence that consists of something followed by a call, it complains about these nops.

At the moment, simply disable rewriting these sequences.

BUG=http://code.google.com/p/nativeclient/issues/detail?id=237
TEST=

Review URL: http://codereview.chromium.org/3467009
---
 binutils/bfd/elf32-i386.c   |    8 ++++++++
 binutils/bfd/elf64-x86-64.c |    8 ++++++++
 2 files changed, 16 insertions(+), 0 deletions(-)

diff --git a/binutils/bfd/elf32-i386.c b/binutils/bfd/elf32-i386.c
index d4bba67..d22c998 100644
--- a/binutils/bfd/elf32-i386.c
+++ b/binutils/bfd/elf32-i386.c
@@ -1322,6 +1322,14 @@ elf_i386_tls_transition (struct bfd_link_info *info, bfd *abfd,
   if (from_type == to_type)
     return TRUE;
 
+#ifdef ELF32_NACL_C
+  /* Don't attempt to rewrite code sequences with call in the middle,
+     because the NaCl assembler will put no-ops before the call,
+     which we can't handle yet.  */
+  if (from_type == R_386_TLS_GD || from_type == R_386_TLS_LDM)
+    return TRUE;
+#endif
+
   /* Check if the transition can be performed.  */
   if (check
       && ! elf_i386_check_tls_transition (abfd, sec, contents,
diff --git a/binutils/bfd/elf64-x86-64.c b/binutils/bfd/elf64-x86-64.c
index 1434836..a82b4af 100644
--- a/binutils/bfd/elf64-x86-64.c
+++ b/binutils/bfd/elf64-x86-64.c
@@ -1082,6 +1082,14 @@ elf64_x86_64_tls_transition (struct bfd_link_info *info, bfd *abfd,
   if (from_type == to_type)
     return TRUE;
 
+#ifdef ELF64_NACL_C
+  /* Don't attempt to rewrite code sequences with call in the middle,
+     because the NaCl assembler will put no-ops before the call,
+     which we can't handle yet.  */
+  if (from_type == R_X86_64_TLSGD || from_type == R_X86_64_TLSLD)
+    return TRUE;
+#endif
+
   /* Check if the transition can be performed.  */
   if (check
       && ! elf64_x86_64_check_tls_transition (abfd, sec, contents,
-- 
1.7.1

