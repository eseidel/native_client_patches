From 0e7ef2a83e4fd5c90e0ac635f5695a7136a93a5e Mon Sep 17 00:00:00 2001
From: Jan Voung <jvoung@google.com>
Date: Mon, 19 Jul 2010 16:33:18 -0700
Subject: [PATCH 27/27] [binutils] add naclrestsp_noflags (lea instead of add)

Review URL: http://codereview.chromium.org/2858055/show
---
 binutils/gas/config/tc-i386.c |   16 ++++++++++++++++
 binutils/opcodes/i386-opc.tbl |    1 +
 2 files changed, 17 insertions(+), 0 deletions(-)

diff --git a/binutils/gas/config/tc-i386.c b/binutils/gas/config/tc-i386.c
index 4d87d29..32982aa 100644
--- a/binutils/gas/config/tc-i386.c
+++ b/binutils/gas/config/tc-i386.c
@@ -5987,6 +5987,22 @@ check_prefix:
 	    /*                    esp   mov   mov
 				        reg   imm  */
 	    insert_xp_sandbox_code (4, 0x89, 0xbc, insn_start_off);
+	  else if (!strcmp(i.tm.name, "naclrestsp_noflags")) {
+	    /*                    esp   mov   mov
+				        reg   imm  */
+	    // Generate the mov from src into esp first.
+	    insert_xp_sandbox_code (4, 0x89, 0xbc, insn_start_off);
+	    // Now set it up to restore rsp with lea (%rsp,%r15,1), %rsp --
+	    // overriding the add instruction that insert_xp_sandbox_code
+	    // set up to restore rsp.
+	    i.prefix[REX_PREFIX] = 0x40 | REX_W | REX_X;
+	    i.sib.base = 4;   // %rsp
+	    i.sib.index = 7;  // %r15
+	    i.sib.scale = 0;
+	    i.rm.mode = 0;
+	    i.rm.reg = 4;
+	    // opcode comes from the .tbl file (no need to override)
+	  }
 
 	  /* The prefix bytes.  */
 	  for (j = ARRAY_SIZE (i.prefix), q = i.prefix; j > 0; j--, q++)
diff --git a/binutils/opcodes/i386-opc.tbl b/binutils/opcodes/i386-opc.tbl
index 7d0a1bd..57b731b 100644
--- a/binutils/opcodes/i386-opc.tbl
+++ b/binutils/opcodes/i386-opc.tbl
@@ -224,6 +224,7 @@ naclspadj, 2, 0x01, None, 1, Cpu64, W|Modrm|No_sSuf|No_ldSuf, { Imm8S, Reg64 }
 naclspadj, 2, 0x01, None, 1, Cpu64, W|Modrm|No_sSuf|No_ldSuf, { Imm32S, Reg64 }
 naclrestbp, 2, 0x01, None, 1, Cpu64, W|Modrm|No_sSuf|No_ldSuf, { Unspecified|BaseIndex|Disp8|Disp32S|Reg32, Reg64 }
 naclrestsp, 2, 0x01, None, 1, Cpu64, W|Modrm|No_sSuf|No_ldSuf, { Unspecified|BaseIndex|Disp8|Disp32S|Reg32, Reg64 }
+naclrestsp_noflags, 2, 0x8d, None, 1, Cpu64, W|Modrm|No_sSuf|No_ldSuf, { Unspecified|BaseIndex|Disp8|Disp32S|Reg32, Reg64 }
 
 // Native client string operations
 cmps, 3, 0xa6, None, 1, Cpu64, W|No_sSuf|No_ldSuf|IsString, { Byte|Word|Dword|Qword|Unspecified|BaseIndex|Disp8|Disp16|Disp32|Disp32S|EsSeg, Byte|Word|Dword|Qword|Unspecified|BaseIndex|Disp8|Disp16|Disp32|Disp32S, Reg64 }
-- 
1.7.1

