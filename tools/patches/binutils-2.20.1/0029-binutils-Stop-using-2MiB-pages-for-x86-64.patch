From dcc46c911e132c76c21d66b7d7063b4de7c1f387 Mon Sep 17 00:00:00 2001
From: Egor Pasko <pasko@google.com>
Date: Wed, 21 Jul 2010 18:27:32 +0200
Subject: [PATCH 29/29] [binutils] Stop using 2MiB pages for x86-64.

Stop using 2MiB pages for x86-64. This finalizes the ABI so now we are using
version 8 for both IA32 and x86-64.

original change made by Victor at: http://codereview.chromium.org/2107008/show
and was lost during transition to Git

Made DATA_SEGMENT_RELRO_END macro non-empty (as in elf.sc), which is required by
glibc configure. This requires extra alignment, so be it.

Review URL: http://codereview.chromium.org/2834056
---
 binutils/gas/config/tc-i386.c        |    8 +-------
 binutils/ld/emulparams/elf64_nacl.sh |    1 +
 binutils/ld/emulparams/elf_nacl.sh   |    1 +
 binutils/ld/scripttempl/naclelf.sc   |   12 ++++++------
 4 files changed, 9 insertions(+), 13 deletions(-)

diff --git a/binutils/gas/config/tc-i386.c b/binutils/gas/config/tc-i386.c
index 32982aa..0b46c87 100644
--- a/binutils/gas/config/tc-i386.c
+++ b/binutils/gas/config/tc-i386.c
@@ -9111,13 +9111,7 @@ handle_large_common (int small ATTRIBUTE_UNUSED)
 void nacl_elf_final_processing(void)
 {
   elf_elfheader (stdoutput)->e_ident[EI_OSABI] = ELFOSABI_NACL;
-  if (flag_code == CODE_64BIT)
-    {
-      /* Until we reach a stable version on x86-64, leave it as zero. */
-      elf_elfheader (stdoutput)->e_ident[EI_ABIVERSION] = 0;
-    }
-  else
-    elf_elfheader (stdoutput)->e_ident[EI_ABIVERSION] = EF_NACL_ABIVERSION;
+  elf_elfheader (stdoutput)->e_ident[EI_ABIVERSION] = EF_NACL_ABIVERSION;
 
   elf_elfheader (stdoutput)->e_flags &= ~EF_NACL_ALIGN_MASK;
   if (nacl_library_mode)
diff --git a/binutils/ld/emulparams/elf64_nacl.sh b/binutils/ld/emulparams/elf64_nacl.sh
index 6b10f67..558e51d 100644
--- a/binutils/ld/emulparams/elf64_nacl.sh
+++ b/binutils/ld/emulparams/elf64_nacl.sh
@@ -2,3 +2,4 @@
 SCRIPT_NAME=naclelf
 OUTPUT_FORMAT="elf64-nacl"
 TEXT_START_ADDR=0x00020000
+SEGMENT_SIZE=0x10000
diff --git a/binutils/ld/emulparams/elf_nacl.sh b/binutils/ld/emulparams/elf_nacl.sh
index e7b5a59..eaabee5 100644
--- a/binutils/ld/emulparams/elf_nacl.sh
+++ b/binutils/ld/emulparams/elf_nacl.sh
@@ -2,3 +2,4 @@
 SCRIPT_NAME=naclelf
 OUTPUT_FORMAT="elf32-nacl"
 TEXT_START_ADDR=0x00020000
+SEGMENT_SIZE=0x10000
diff --git a/binutils/ld/scripttempl/naclelf.sc b/binutils/ld/scripttempl/naclelf.sc
index 7d13e91..2b2fb5c 100644
--- a/binutils/ld/scripttempl/naclelf.sc
+++ b/binutils/ld/scripttempl/naclelf.sc
@@ -101,11 +101,11 @@ test -n "$CREATE_SHLIB$CREATE_PIE" && test -n "$SHLIB_DATA_ADDR" && COMMONPAGESI
 test -z "$CREATE_SHLIB$CREATE_PIE" && test -n "$DATA_ADDR" && COMMONPAGESIZE=""
 test -n "$RELRO_NOW" && unset SEPARATE_GOTPLT
 test -z "$ATTRS_SECTIONS" && ATTRS_SECTIONS=".gnu.attributes 0 : { KEEP (*(.gnu.attributes)) }"
-DATA_SEGMENT_ALIGN="ALIGN(${SEGMENT_SIZE}) + (. & (${MAXPAGESIZE} - 1))"
+DATA_SEGMENT_ALIGN="ALIGN(${SEGMENT_SIZE}) + (. & (${COMMONPAGESIZE} - 1))"
 DATA_SEGMENT_RELRO_END=""
 DATA_SEGMENT_END=""
 if test -n "${COMMONPAGESIZE}"; then
-  DATA_SEGMENT_ALIGN="ALIGN (${SEGMENT_SIZE}) - ((${MAXPAGESIZE} - .) & (${MAXPAGESIZE} - 1)); . = DATA_SEGMENT_ALIGN (${MAXPAGESIZE}, ${COMMONPAGESIZE})"
+  DATA_SEGMENT_ALIGN="ALIGN (${SEGMENT_SIZE}) - ((${COMMONPAGESIZE} - .) & (${COMMONPAGESIZE} - 1)); . = DATA_SEGMENT_ALIGN (${COMMONPAGESIZE}, ${COMMONPAGESIZE})"
   DATA_SEGMENT_END=". = DATA_SEGMENT_END (.);"
   DATA_SEGMENT_RELRO_END=". = DATA_SEGMENT_RELRO_END (${SEPARATE_GOTPLT-0}, .);"
 fi
@@ -191,11 +191,11 @@ test "${LARGE_SECTIONS}" = "yes" && OTHER_BSS_SECTIONS="
     *(LARGE_COMMON)
   }"
 test "${LARGE_SECTIONS}" = "yes" && LARGE_SECTIONS="
-  .lrodata ${RELOCATING-0} ${RELOCATING+ALIGN(${MAXPAGESIZE}) + (. & (${MAXPAGESIZE} - 1))} :
+  .lrodata ${RELOCATING-0} ${RELOCATING+ALIGN(${COMMONPAGESIZE}) + (. & (${COMMONPAGESIZE} - 1))} :
   {
     *(.lrodata${RELOCATING+ .lrodata.* .gnu.linkonce.lr.*})
   }
-  .ldata ${RELOCATING-0} ${RELOCATING+ALIGN(${MAXPAGESIZE}) + (. & (${MAXPAGESIZE} - 1))} :
+  .ldata ${RELOCATING-0} ${RELOCATING+ALIGN(${COMMONPAGESIZE}) + (. & (${COMMONPAGESIZE} - 1))} :
   {
     *(.ldata${RELOCATING+ .ldata.* .gnu.linkonce.l.*})
     ${RELOCATING+. = ALIGN(. != 0 ? ${ALIGNMENT} : 1);}
@@ -421,7 +421,7 @@ cat <<EOF
                           DEFINED (__executable_start) ?
                             NACL_MASK (. - __executable_start) : 0xffffffff);}
   . = . + 32; /* reserve space for HLTs */
-  . = ALIGN(CONSTANT (MAXPAGESIZE)); /* nacl wants page alignment */
+  . = ALIGN(CONSTANT (COMMONPAGESIZE)); /* nacl wants page alignment */
   ${WRITABLE_RODATA-${RODATA}} :rodata
   .rodata1      ${RELOCATING-0} : { *(.rodata1) }
   .nacl_rpc_methods : { *(.nacl_rpc_methods) }
@@ -494,7 +494,7 @@ cat <<EOF
 
   ${DATA_PLT+${PLT_BEFORE_GOT-${PLT}}}
 
-  ${RELOCATING+. = ALIGN(${MAXPAGESIZE});} /* nacl wants page alignment */
+  ${RELOCATING+. = ALIGN(${COMMONPAGESIZE});} /* nacl wants page alignment */
   .data         ${RELOCATING-0} :
   {
     ${RELOCATING+${DATA_START_SYMBOLS}}
-- 
1.7.1

