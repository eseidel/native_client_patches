From 3b9e06a4e72b11cbaf9dab0a4885c3bd7f54ebd8 Mon Sep 17 00:00:00 2001
From: Egor Pasko <pasko@google.com>
Date: Tue, 18 May 2010 15:51:56 +0200
Subject: [PATCH 12/12] [gcc] Fix test-unwind.h harness

x86_64 does not work without %rip and
%rdi/%rsi are not callee-saved per ABI.
---
 .../g++.dg/torture/stackalign/test-unwind.h        |   11 ++++++++++-
 1 files changed, 10 insertions(+), 1 deletions(-)

diff --git a/gcc/gcc/testsuite/g++.dg/torture/stackalign/test-unwind.h b/gcc/gcc/testsuite/g++.dg/torture/stackalign/test-unwind.h
index b07b27c..17a9d32 100644
--- a/gcc/gcc/testsuite/g++.dg/torture/stackalign/test-unwind.h
+++ b/gcc/gcc/testsuite/g++.dg/torture/stackalign/test-unwind.h
@@ -1,7 +1,10 @@
 #include "check.h"
 
-
+#ifdef __x86_64__
+#define ASMNAME(cname)  ASMNAME2 (__USER_LABEL_PREFIX__, cname "(%rip)")
+#else
 #define ASMNAME(cname)  ASMNAME2 (__USER_LABEL_PREFIX__, cname)
+#endif
 #define ASMNAME2(prefix, cname) STRING (prefix) cname
 #define STRING(x)    #x
 
@@ -58,6 +61,7 @@ main()
 	// Init registers to correct value.
         // Use following template so that RA will save/restore callee
 	// save registers in prologue/epilogue
+#ifndef __x86_64__
 	__asm__  __volatile__ (
 	"movl %1, %0"
 	: "=D" (dummy)
@@ -68,6 +72,7 @@ main()
 	: "=S" (dummy)
 	: "i" (INIT_ESI)
 	);
+#endif
 	__asm__  __volatile__ (
 	"movl %1, %0"
 	: "=b" (dummy)
@@ -86,13 +91,16 @@ main()
 
 	// Get DI/SI/BX register value after exception caught
 	__asm__ __volatile__ (
+#ifndef __x86_64__
 	"movl %edi," ASMNAME("g_edi")"\n\t"
 	"movl %esi," ASMNAME("g_esi")"\n\t"
+#endif
 	"movl %ebx," ASMNAME("g_ebx")"\n\t"
 	"movl %ebp," ASMNAME("g_ebp")"\n\t"
 	"movl %esp," ASMNAME("g_esp")"\n\t"
 	);
 
+#ifndef __x86_64__
 	// Check if DI/SI/BX register value are the same as before calling
         // foo.
 	if (g_edi != INIT_EDI)
@@ -109,6 +117,7 @@ main()
 		printf("esi=%d, correct value:%d\n", g_esi, INIT_ESI);
 #endif
 	}
+#endif
 	if (g_ebx != INIT_EBX)
 	{
 		n_error++;
-- 
1.7.0.1

