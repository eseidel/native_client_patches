From 0ef4696d543e42c0ab2634d79b710640eb6c6b2f Mon Sep 17 00:00:00 2001
From: Evgeny Eltsin <eaeltsin@google.com>
Date: Mon, 23 Aug 2010 16:38:16 +0400
Subject: [PATCH 43/47] [gcc] Fix optimized expand of ptr diff for 64-bit PIC

SImode subtraction instructions use "m" contstraint for one operand and "i" constraint for another. This does not work in 64-bit PIC in nacl, as "i" allows symbol references which get rip-relative addressing.

This replaces "i" constraint with "e" contraint, where the latter does not allow symbol references except those that simply fit in 32-bits immediate.

Review URL: http://codereview.chromium.org/3187016
---
 gcc/gcc/config/i386/i386.md |    6 +++---
 1 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/gcc/gcc/config/i386/i386.md b/gcc/gcc/config/i386/i386.md
index 0f1407b..3d1e331 100644
--- a/gcc/gcc/config/i386/i386.md
+++ b/gcc/gcc/config/i386/i386.md
@@ -866,7 +866,7 @@
 (define_insn "*cmpsi_minus_1"
   [(set (reg FLAGS_REG)
 	(compare (minus:SI (match_operand:SI 0 "nonimmediate_operand" "rm,r")
-			   (match_operand:SI 1 "general_operand" "ri,mr"))
+			   (match_operand:SI 1 "general_operand" "re,mr"))
 		 (const_int 0)))]
   "ix86_match_ccmode (insn, CCGOCmode)"
   "cmp{l}\t{%1, %0|%0, %1}"
@@ -883,7 +883,7 @@
 (define_insn "*cmpsi_1_insn"
   [(set (reg FLAGS_REG)
 	(compare (match_operand:SI 0 "nonimmediate_operand" "rm,r")
-		 (match_operand:SI 1 "general_operand" "ri,mr")))]
+		 (match_operand:SI 1 "general_operand" "re,mr")))]
   "!(MEM_P (operands[0]) && MEM_P (operands[1]))
     && ix86_match_ccmode (insn, CCmode)"
   "cmp{l}\t{%1, %0|%0, %1}"
@@ -7773,7 +7773,7 @@
 (define_insn "*subsi_1"
   [(set (match_operand:SI 0 "nonimmediate_operand" "=rm,r")
 	(minus:SI (match_operand:SI 1 "nonimmediate_operand" "0,0")
-		  (match_operand:SI 2 "general_operand" "ri,rm")))
+		  (match_operand:SI 2 "general_operand" "re,rm")))
    (clobber (reg:CC FLAGS_REG))]
   "ix86_binary_operator_ok (MINUS, SImode, operands)"
   "sub{l}\t{%2, %0|%0, %2}"
-- 
1.7.1

