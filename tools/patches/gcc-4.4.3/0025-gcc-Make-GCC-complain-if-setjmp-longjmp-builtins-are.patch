From 355a0a18d9c9d490620421a0687aab04f027f284 Mon Sep 17 00:00:00 2001
From: Egor Pasko <pasko@google.com>
Date: Tue, 13 Jul 2010 17:11:03 +0200
Subject: [PATCH 25/25] [gcc] Make GCC complain if setjmp/longjmp builtins are encountered.

Redefine the builtins in c-torture/.../builtins.exp to make a lot of c-torture
tests pass. This is a dirty way to fix the tests, we will need to enable the
builtins to work with glibc once the latter ready. The purpose of this
manipulation is to reduce the amount of failing tests in the GCC testsuite and
thus make it easier to focus on more interesting failures.

Review URL: http://codereview.chromium.org/2824045
---
 gcc/gcc/builtins.c                                 |   10 ++++++++++
 .../gcc.c-torture/execute/builtins/builtins.exp    |    4 ++++
 2 files changed, 14 insertions(+), 0 deletions(-)

diff --git a/gcc/gcc/builtins.c b/gcc/gcc/builtins.c
index 11771f9..f7a25e4 100644
--- a/gcc/gcc/builtins.c
+++ b/gcc/gcc/builtins.c
@@ -6701,6 +6701,11 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,
     case BUILT_IN_SETJMP_SETUP:
       /* __builtin_setjmp_setup is passed a pointer to an array of five words
           and the receiver label.  */
+      if (TARGET_NACL)
+        {
+	  error ("%<__builtin_setjmp%> is not available, use setjmp call");
+          break;
+        }
       if (validate_arglist (exp, POINTER_TYPE, POINTER_TYPE, VOID_TYPE))
 	{
 	  rtx buf_addr = expand_expr (CALL_EXPR_ARG (exp, 0), subtarget,
@@ -6751,6 +6756,11 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,
 	 It's similar to the C library longjmp function but works with
 	 __builtin_setjmp above.  */
     case BUILT_IN_LONGJMP:
+      if (TARGET_NACL)
+        {
+	  error ("%<__builtin_longjmp%> is not available, use longjmp call");
+          break;
+        }
       if (validate_arglist (exp, POINTER_TYPE, INTEGER_TYPE, VOID_TYPE))
 	{
 	  rtx buf_addr = expand_expr (CALL_EXPR_ARG (exp, 0), subtarget,
diff --git a/gcc/gcc/testsuite/gcc.c-torture/execute/builtins/builtins.exp b/gcc/gcc/testsuite/gcc.c-torture/execute/builtins/builtins.exp
index e82d2fd..e30bab7 100644
--- a/gcc/gcc/testsuite/gcc.c-torture/execute/builtins/builtins.exp
+++ b/gcc/gcc/testsuite/gcc.c-torture/execute/builtins/builtins.exp
@@ -24,6 +24,10 @@ if [istarget "powerpc-*-darwin*"] {
    lappend additional_flags "-Wl,-multiply_defined,suppress"
 }
 
+if [istarget "*-*-nacl*"] {
+    lappend additional_flags "-D__builtin_longjmp=longjmp" "-D__builtin_setjmp=setjmp"
+}
+
 foreach src [lsort [find $srcdir/$subdir *.c]] {
     if {![string match *-lib.c $src] && [runtest_file_p $runtests $src]} {
 	c-torture-execute [list $src \
-- 
1.7.1

