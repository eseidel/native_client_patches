From 110d19199efccf9d32e1f8a1c487da826513850b Mon Sep 17 00:00:00 2001
From: Evgeny Eltsin <eaeltsin@google.com>
Date: Fri, 10 Sep 2010 13:41:49 +0400
Subject: [PATCH 51/51] [gcc] Fix addsi patterns for nacl64 PIC

This is similar to a bunch of previous fixes: prevent define_expands and define_insns from treating ILP32 PIC symbol_ref as an immediate.

BUG=http://code.google.com/p/nativeclient/issues/detail?id=872

TEST=

Review URL: http://codereview.chromium.org/3291022
---
 gcc/gcc/config/i386/i386.md |   18 +++++++++---------
 1 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/gcc/gcc/config/i386/i386.md b/gcc/gcc/config/i386/i386.md
index e00d5a9..ddf9e9c 100644
--- a/gcc/gcc/config/i386/i386.md
+++ b/gcc/gcc/config/i386/i386.md
@@ -5930,7 +5930,7 @@
 	  (zero_extend:DI
 	    (plus:SI (plus:SI (match_operand:SI 3 "ix86_carry_flag_operator" "")
 			      (match_operand:SI 1 "nonimmediate_operand" "%0"))
-		     (match_operand:SI 2 "general_operand" "g"))))
+		     (match_operand:SI 2 "x86_64_general_operand" "rem"))))
    (clobber (reg:CC FLAGS_REG))]
   "TARGET_64BIT && ix86_binary_operator_ok (PLUS, SImode, operands)"
   "adc{l}\t{%2, %k0|%k0, %2}"
@@ -5941,7 +5941,7 @@
 (define_insn "*addsi3_cc"
   [(set (reg:CC FLAGS_REG)
 	(unspec:CC [(match_operand:SI 1 "nonimmediate_operand" "%0,0")
-		    (match_operand:SI 2 "general_operand" "ri,rm")]
+		    (match_operand:SI 2 "x86_64_general_operand" "re,rm")]
 		   UNSPEC_ADD_CARRY))
    (set (match_operand:SI 0 "nonimmediate_operand" "=rm,r")
 	(plus:SI (match_dup 1) (match_dup 2)))]
@@ -5965,7 +5965,7 @@
 (define_expand "addsi3"
   [(set (match_operand:SI 0 "nonimmediate_operand" "")
 	(plus:SI (match_operand:SI 1 "nonimmediate_operand" "")
-		 (match_operand:SI 2 "general_operand" "")))]
+		 (match_operand:SI 2 "x86_64_general_operand" "")))]
   ""
   "ix86_expand_binary_operator (PLUS, SImode, operands); DONE;")
 
@@ -6495,7 +6495,7 @@
 (define_insn "*addsi_1"
   [(set (match_operand:SI 0 "nonimmediate_operand" "=r,rm,r")
 	(plus:SI (match_operand:SI 1 "nonimmediate_operand" "%0,0,r")
-		 (match_operand:SI 2 "general_operand" "g,re,le")))
+		 (match_operand:SI 2 "x86_64_general_operand" "rme,re,le")))
    (clobber (reg:CC FLAGS_REG))]
   "ix86_binary_operator_ok (PLUS, SImode, operands)"
 {
@@ -6659,7 +6659,7 @@
   [(set (reg FLAGS_REG)
 	(compare
 	  (plus:SI (match_operand:SI 1 "nonimmediate_operand" "%0,0")
-		   (match_operand:SI 2 "general_operand" "g,ri"))
+		   (match_operand:SI 2 "x86_64_general_operand" "rem,ri"))
 	  (const_int 0)))
    (set (match_operand:SI 0 "nonimmediate_operand" "=r,rm")
 	(plus:SI (match_dup 1) (match_dup 2)))]
@@ -6707,7 +6707,7 @@
   [(set (reg FLAGS_REG)
 	(compare
 	  (plus:SI (match_operand:SI 1 "nonimmediate_operand" "%0")
-		   (match_operand:SI 2 "general_operand" "g"))
+		   (match_operand:SI 2 "x86_64_general_operand" "rem"))
 	  (const_int 0)))
    (set (match_operand:DI 0 "register_operand" "=r")
 	(zero_extend:DI (plus:SI (match_dup 1) (match_dup 2))))]
@@ -6750,7 +6750,7 @@
 
 (define_insn "*addsi_3"
   [(set (reg FLAGS_REG)
-	(compare (neg:SI (match_operand:SI 2 "general_operand" "g"))
+	(compare (neg:SI (match_operand:SI 2 "x86_64_general_operand" "rem"))
 		 (match_operand:SI 1 "nonimmediate_operand" "%0")))
    (clobber (match_scratch:SI 0 "=r"))]
   "ix86_match_ccmode (insn, CCZmode)
@@ -6795,7 +6795,7 @@
 ;; See comment for addsi_1_zext why we do use nonimmediate_operand
 (define_insn "*addsi_3_zext"
   [(set (reg FLAGS_REG)
-	(compare (neg:SI (match_operand:SI 2 "general_operand" "g"))
+	(compare (neg:SI (match_operand:SI 2 "x86_64_general_operand" "rem"))
 		 (match_operand:SI 1 "nonimmediate_operand" "%0")))
    (set (match_operand:DI 0 "register_operand" "=r")
 	(zero_extend:DI (plus:SI (match_dup 1) (match_dup 2))))]
@@ -6885,7 +6885,7 @@
   [(set (reg FLAGS_REG)
 	(compare
 	  (plus:SI (match_operand:SI 1 "nonimmediate_operand" "%0")
-		   (match_operand:SI 2 "general_operand" "g"))
+		   (match_operand:SI 2 "x86_64_general_operand" "rem"))
 	  (const_int 0)))
    (clobber (match_scratch:SI 0 "=r"))]
   "ix86_match_ccmode (insn, CCGOCmode)
-- 
1.7.1

